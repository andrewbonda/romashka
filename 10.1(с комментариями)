#include <iostream> // Подключение библиотеки для работы с вводом-выводом
#include <cmath>    // Подключение библиотеки для математических функций (sqrt)
using namespace std; // Использование пространства имен std

/**
 * Функция Prime: проверяет, является ли число простым.
 * @param num - проверяемое число
 * @return true, если число простое, иначе false
 */
bool Prime(int num) {
    if (num <= 1) return false; // Числа меньше или равные 1 не являются простыми
    for (int i = 2; i <= sqrt(num); ++i) { // Проверяем делители от 2 до sqrt(num)
        if (num % i == 0) return false; // Если есть делитель, число не является простым
    }
    return true; // Если делителей нет, число простое
}

/**
 * Рекурсивная функция Recursive: ищет пары простых чисел-близнецов в диапазоне [current, limit].
 * Простые числа-близнецы — это пара простых чисел, разность между которыми равна 2.
 * @param current - текущее число для проверки
 * @param limit - верхняя граница диапазона поиска
 * @return true, если найдена хотя бы одна пара близнецов, иначе false
 */
bool Recursive(int current, int limit) {
    if (current > limit) return false; // Если достигнута верхняя граница, завершаем рекурсию

    // Проверяем, являются ли current и current + 2 простыми числами
    if (Prime(current) && Prime(current + 2)) { 
        cout << "Найдены близнецы: " << current << " и " << current + 2 << endl; // Выводим пару близнецов
        return true; // Возвращаем true, так как найдена пара близнецов
    }

    // Рекурсивный вызов для следующего числа
    return Recursive(current + 1, limit);
}

int main() {
    int n; // Переменная для хранения входного числа

    // Запрашиваем у пользователя натуральное число n
    cout << "Введите натуральное число n: ";
    cin >> n;

    // Проверяем, что введенное число является натуральным
    if (n <= 0) {
        cout << "n должно быть натуральным числом!" << endl;
        return 1; // Выходим из программы с кодом ошибки
    }

    int limit = 2 * n; // Определяем верхнюю границу диапазона поиска как 2 * n

    // Вызываем рекурсивную функцию для поиска пар близнецов
    if (!Recursive(n, limit)) { 
        // Если пары близнецов не найдено, выводим соответствующее сообщение
        cout << "Среди чисел от " << n << " до " << limit << " близнецов нет." << endl;
    }

    return 0; // Успешное завершение программы
}
